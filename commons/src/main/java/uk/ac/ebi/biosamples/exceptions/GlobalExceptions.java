/*
* Copyright 2021 EMBL - European Bioinformatics Institute
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use this
* file except in compliance with the License. You may obtain a copy of the License at
* http://www.apache.org/licenses/LICENSE-2.0
* Unless required by applicable law or agreed to in writing, software distributed under the
* License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied. See the License for the
* specific language governing permissions and limitations under the License.
*/
package uk.ac.ebi.biosamples.exceptions;

import java.io.Serial;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.ResponseStatus;

/*
All BioSamples exceptions are declared in this class
 */
public class GlobalExceptions {
  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "New sample submission should not contain an accession or a SRA accession, these are auto-generated by BioSamples database")
  public static class SampleWithAccessionSubmissionException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason = "Bulk fetch request parameter accessions is null or empty")
  public static class BulkFetchInvalidRequestException extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.FORBIDDEN)
  public static class BulkFetchForbiddenException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason = "Sample accession must match URL accession") // 400
  public static class SampleAccessionMismatchException extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "Sample accession does not exist") // 400
  public static class SampleAccessionDoesNotExistException extends RuntimeException {}

  public static class SampleNotFoundException extends RuntimeException {
    @Serial private static final long serialVersionUID = 1376682660925892995L;
  }

  public static class SampleValidationException extends RuntimeException {
    public SampleValidationException(final String message) {
      super(message);
    }
  }

  public static class SchemaValidationException extends RuntimeException {
    public SchemaValidationException(final String message, final Exception e) {
      super(message, e);
    }

    public SchemaValidationException(final String message) {
      super(message);
    }
  }

  @ResponseStatus(
      value = HttpStatus.FORBIDDEN,
      reason =
          "This sample is private and not available for browsing. If you think this is an error and/or you should have access please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk")
  public static class SampleNotAccessibleException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.FORBIDDEN,
      reason =
          "This sample is not permitted to be updated. Please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk for more information")
  public static class InvalidSubmissionSourceException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.FORBIDDEN,
      reason =
          "This sample is permitted to be updated only by the original submitter. Please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk for more information")
  public static class NotOriginalSubmitterException extends RuntimeException {}

  public static class SampleNotAccessibleAdviceException extends RuntimeException {
    @Serial private static final long serialVersionUID = -6250819256457895445L;
  }

  @ResponseStatus(value = HttpStatus.FORBIDDEN)
  public static class AccessControlException extends RuntimeException {
    public AccessControlException() {
      super();
    }

    public AccessControlException(final String message) {
      super(message);
    }
  }

  @ResponseStatus(HttpStatus.BAD_REQUEST)
  public static class SampleMandatoryFieldsMissingException extends RuntimeException {
    @Serial private static final long serialVersionUID = -7937033504537036300L;

    public SampleMandatoryFieldsMissingException(final String message) {
      super(message);
    }
  }

  @ResponseStatus(
      value = HttpStatus.FORBIDDEN,
      reason =
          "You don't have access to the sample structured data. If you think this is an error and/or you should have access please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk") // 403
  public static class StructuredDataNotAccessibleException extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.BAD_REQUEST, reason = "Sample domain mismatch") // 400
  public static class SampleDomainMismatchException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "Sample submitted via V2 submission endpoints shouldn't contain relationships, please use the traditional endpoint instead") // 400
  public static class SampleWithRelationshipSubmissionExceptionV2 extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.UNAUTHORIZED, reason = "Unauthorized submitter")
  public static class WebinUserLoginUnauthorizedException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason = "Structured data must have a webin submission account id") // 400
  public static class StructuredDataWebinIdMissingException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.UNAUTHORIZED,
      reason = "You must provide a bearer token to be able to submit") // 401
  public static class WebinTokenInvalidException extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.BAD_REQUEST)
  public static class UploadInvalidException extends RuntimeException {
    public UploadInvalidException(final String collect) {
      super(collect);
    }
  }

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "Validation of taxonomy failed against the ENA taxonomy service. The Organism attribute is either invalid or not submittable")
  public static class ENATaxonUnresolvedException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason = "Sample must match URL or be omitted") // 400
  public static class SampleNotMatchException extends RuntimeException {}

  @ResponseStatus(value = HttpStatus.INTERNAL_SERVER_ERROR, reason = "Bulk accessioning failure")
  public static class BulkAccessionFailureExceptionV2 extends RuntimeException {
    public BulkAccessionFailureExceptionV2(final String message) {
      super(message);
    }
  }

  public static class SampleConversionException extends RuntimeException {
    public SampleConversionException(final String message) {
      super(message);
    }
  }

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "BioSamples pagination using 'page' and 'size' parameters are limited due to performance reasons. "
              + "(max page = 500 and max page size = 200). Please use 'cursor' and 'size' for pagination and crawling. "
              + "You can find more information about using cursor in our documentation")
  public static class PaginationException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "Sample is invalid. Please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk for more information.")
  public static class InvalidSampleException extends RuntimeException {}

  @ResponseStatus(
      value = HttpStatus.BAD_REQUEST,
      reason =
          "SRA accession cannot be changed while sample updates. Please contact the BioSamples Helpdesk at biosamples@ebi.ac.uk for more information.")
  public static class ChangedSRAAccessionException extends RuntimeException {}
}
